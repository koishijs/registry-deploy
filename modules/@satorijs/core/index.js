import{Buffer as T}from"https://registry.koishi.chat/modules/buffer/index.js";import j from"https://registry.koishi.chat/modules/process/index.js";import*as k from"https://registry.koishi.chat/modules/cordis/index.js";import{defineProperty as R}from"https://registry.koishi.chat/modules/cosmokit/index.js";import f from"https://registry.koishi.chat/modules/schemastery/index.js";import A from"https://registry.koishi.chat/modules/reggol/index.js";import{Context as H}from"https://registry.koishi.chat/modules/cordis/index.js";import{base64ToArrayBuffer as N,pick as Q,trimSlash as U}from"https://registry.koishi.chat/modules/cosmokit/index.js";import F from"https://registry.koishi.chat/modules/mime-db/index.js";import L from"https://registry.koishi.chat/modules/axios/index.js";var G=Object.defineProperty,b=(t,e)=>G(t,"name",{value:e,configurable:!0}),h=class{constructor(t,e){return h.create(e.request)}extend(t){return h.create({...this.config,...t,headers:{...this.config.headers,...t.headers}})}get(t,e){return this("GET",t,e)}delete(t,e){return this("DELETE",t,e)}post(t,e,s){return this("POST",t,{...s,data:e})}put(t,e,s){return this("PUT",t,{...s,data:e})}patch(t,e,s){return this("PATCH",t,{...s,data:e})}async head(t,e){return(await this.axios(t,{...e,method:"HEAD"})).headers}ws(t,e){return new WebSocket(t)}prepare(){return Q(this.config,["timeout","headers"])}async file(t){let e=/^data:([\w/-]+);base64,(.*)$/.exec(t);if(e){let[,a,u]=e,p=F[a]?.extensions?.[0],y="file"+(p?"."+p:"");return{mime:a,filename:y,data:N(u)}}let[s,i]=new URL(t).pathname.match(/.+\/([^/]*)/),{headers:o,data:r}=await this.axios(t,{method:"GET",responseType:"arraybuffer"});return{mime:o["content-type"],filename:i,data:r}}};b(h,"Quester");(t=>{t.isAxiosError=L.isAxiosError;function e(s={}){let i=U(s.endpoint||""),o=b(async(n={})=>{let a=r.prepare();return L({...a,...n,url:i+n.url,headers:{...a.headers,...n.headers}})},"request"),r=b(async(n,a,u)=>(await o({url:a,...u,method:n})).data,"http");Object.setPrototypeOf(r,this.prototype);for(let n of["extend","get","delete","post","put","patch","head","ws"])r[n]=this.prototype[n].bind(r);return r.config=s,r.axios=(...n)=>typeof n[0]=="string"?o({url:n[0],...n[1]}):o(n[0]),r}t.create=e,b(e,"create")})(h||(h={}));H.service("http",h);var C=h;import K from"https://registry.koishi.chat/modules/@satorijs/element/index.js";import{defineProperty as V}from"https://registry.koishi.chat/modules/cosmokit/index.js";import X from"https://registry.koishi.chat/modules/@satorijs/element/index.js";import{remove as Y}from"https://registry.koishi.chat/modules/cosmokit/index.js";import{defineProperty as _}from"https://registry.koishi.chat/modules/cosmokit/index.js";import O from"https://registry.koishi.chat/modules/@satorijs/element/index.js";import{remove as Z,Time as E}from"https://registry.koishi.chat/modules/cosmokit/index.js";import w from"https://registry.koishi.chat/modules/schemastery/index.js";import tt from"https://registry.koishi.chat/modules/reggol/index.js";import{defineProperty as et}from"https://registry.koishi.chat/modules/cosmokit/index.js";import st from"https://registry.koishi.chat/modules/@satorijs/element/index.js";var z=Object.defineProperty,J=(t,e,s)=>e in t?z(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s,c=(t,e)=>z(t,"name",{value:e,configurable:!0}),x=(t,e,s)=>(J(t,typeof e!="symbol"?e+"":e,s),s),I=class{constructor(t){this.root=t,V(this,l.current,t)}counter=0;get caller(){return this[l.current]}component(t,e,s={}){let i=c(async(r,n,a)=>{if(s.session&&a.type==="send")throw new Error("interactive components is not available outside sessions");let u=await e(r,n,a);return a.transform(X.normalize(u))},"render"),o="component:"+t;return l.service(o),this.root[o]=i,this.caller.collect("component",()=>(this.root[o]=null,!0))}};c(I,"Internal");x(I,"methods",["component"]);var W=class{id;bot;app;constructor(t,e){Object.assign(this,e),this.selfId=t.selfId,this.platform=t.platform,_(this,"bot",t),_(this,"app",t.ctx.root),_(this,"id",++t.ctx.internal.counter),this.initialize()}initialize(){}get uid(){return`${this.platform}:${this.userId}`}get gid(){return`${this.platform}:${this.guildId}`}get cid(){return`${this.platform}:${this.channelId}`}get fid(){return`${this.platform}:${this.channelId}:${this.userId}`}get sid(){return`${this.platform}:${this.selfId}`}get content(){return this.elements.join("")}set content(t){this.elements=O.parse(t)}async transform(t){return await O.transformAsync(t,({type:e,attrs:s,children:i},o)=>{let r=this.app["component:"+e];return r?.(s,i,o)??!0},this)}toJSON(){return Object.fromEntries(Object.entries(this).filter(([t])=>!t.startsWith("_")&&!t.startsWith("$")))}};c(W,"Session");var B=class{constructor(t,e){this.ctx=t,this.config=e,e.platform&&(this.platform=e.platform),e.selfId&&(this.selfId=e.selfId),this.context=t,t.bots.push(this),this.context.emit("bot-added",this),t.on("ready",()=>this.start()),t.on("dispose",()=>{Y(t.bots,this),this.context.emit("bot-removed",this),this.stop()})}isBot=!0;hidden=!1;platform;selfId;internal=null;adapter;error;context;_status="offline";get status(){return this._status}set status(t){this._status=t,this.ctx.bots.includes(this)&&this.context.emit("bot-status-updated",this)}online(){this.status="online",this.error=null}offline(t){this.status="offline",this.error=t}async start(){if(!["connect","reconnect","online"].includes(this.status)){this.status="connect";try{await this.context.parallel("bot-connect",this),await this.adapter.start(this)}catch(t){this.offline(t)}}}async stop(){if(!["disconnect","offline"].includes(this.status)){this.status="disconnect";try{await this.context.parallel("bot-disconnect",this),await this.adapter.stop(this)}catch(t){this.context.emit("internal/warning",t),this.offline()}}}get sid(){return`${this.platform}:${this.selfId}`}session(t){return new W(this,t)}dispatch(t){if(!this.ctx.lifecycle.isActive)return;let e=[t.type];t.subtype&&(e.unshift(e[0]+"/"+t.subtype),t.subsubtype&&e.unshift(e[0]+"/"+t.subsubtype));for(let s of e)this.context.emit(t,s,t)}};c(B,"Bot");x(B,"reusable",!0);var d=new tt("adapter"),v=class{async start(t){}async stop(t){}};c(v,"Adapter");x(v,"schema",!1);(t=>{class e extends t{constructor(r,n){super(),this.ctx=r,this.bot=n,n.adapter=this}static reusable=!0}c(e,"Client"),t.Client=e;class s extends t{bots=[];fork(r,n){n.adapter=this,this.bots.push(n),r.on("dispose",()=>{Z(this.bots,n)})}}c(s,"Server"),t.Server=s;class i extends t.Client{static reusable=!0;static Config=w.object({retryTimes:w.natural().description("初次连接时的最大重试次数。").default(6),retryInterval:w.natural().role("ms").description("初次连接时的重试时间间隔。").default(5*E.second),retryLazy:w.natural().role("ms").description("连接关闭后的重试时间间隔。").default(E.minute)}).description("连接设置");async start(r){let n=0,{retryTimes:a,retryInterval:u,retryLazy:p}=r.config,y=c(async(M=!1)=>{d.debug("websocket client opening");let m=await this.prepare(r),P=m.url.replace(/\?.+/,"");m.addEventListener("error",({error:g})=>{d.debug(g)}),m.addEventListener("close",({code:g,reason:D})=>{if(r.socket=null,d.debug(`websocket closed with ${g}`),r.status==="disconnect")return r.status="offline";let S=D.toString()||`failed to connect to ${P}, code: ${g}`,$=u;if(n>=a){if(M)return r.error=new Error(S),r.status="offline";$=p}n++,r.status="reconnect",d.warn(`${S}, will retry in ${E.format($)}...`),setTimeout(()=>{r.status==="reconnect"&&y()},$)}),m.addEventListener("open",()=>{n=0,r.socket=m,d.info("connect to server: %c",P),this.accept(r)})},"reconnect");y(!0)}async stop(r){r.socket?.close()}}c(i,"WsClient"),t.WsClient=i})(v||(v={}));var q=class extends Error{constructor(t,e=""){super(e),this.errors=t}};c(q,"AggregateError");var rt=class{constructor(t,e,s,i={}){this.bot=t,this.channelId=e,this.guildId=s,this.options=i,this.session=t.session({type:"send",author:t,channelId:e,guildId:s,subtype:s?"group":"private"}),et(this.session,t.platform,Object.create(t.internal))}errors=[];results=[];session;async render(t,e){for(let s of t)await this.visit(s);e&&await this.flush()}async send(t){if(this.session.elements=st.normalize(t),await this.session.app.serial(this.session,"before-send",this.session,this.options))return;let e=this.options.session??this.session;if(await this.render(await e.transform(this.session.elements)),await this.flush(),this.errors.length)throw new q(this.errors);return this.results.map(s=>s.messageId)}};c(rt,"Messenger");K.warn=new A("element").warn;R(C,"Config",f.object({timeout:f.natural().role("ms").description("等待连接建立的最长时间。")}).description("请求设置"));C.createConfig=c(function(e){return f.object({endpoint:f.string().role("link").description("要连接的服务器地址。").default(typeof e=="string"?e:null).required(typeof e=="boolean"?e:!1),headers:f.dict(String).role("table").description("要附加的额外请求头。"),...this.Config.dict}).description("请求设置")},"createConfig");var l=class extends k.Context{constructor(t){super(t),this.on("internal/warning",(e,...s)=>{this.logger("app").warn(e,...s)})}logger(t){return new A(t)}};c(l,"Context");x(l,"session",Symbol("session"));(t=>{t.Config=f.intersect([f.object({})])})(l||(l={}));l.service("internal",I);l.service("bots",class{constructor(t){let e=[];return new Proxy(e,{get(s,i){return i in s||typeof i=="symbol"?s[i]:e.find(o=>o.sid===i)},deleteProperty(s,i){if(i in s||typeof i=="symbol")return delete s[i];let o=s.findIndex(r=>r.sid===i);return o<0||s.splice(o,1),!0}})}});export{v as Adapter,B as Bot,l as Context,K as Element,I as Internal,A as Logger,rt as Messenger,rt as Modulator,C as Quester,f as Schema,W as Session,K as h,K as segment,f as z};
